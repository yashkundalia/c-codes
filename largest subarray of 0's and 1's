/*Given an array of 0s and 1s. Find the length of the largest subarray with equal number of 0s and 1s.*/


int maxLen(int arr[], int N)
    {
        // Your code here
        for(int i=0;i<N;i++)
        {
            if(arr[i] == 0)
            {
                arr[i] = -1;
            }
        }
        map<int,int> first;
        map<int,int> last;
        vector<int> v;
        int sum =0;
        v.push_back(0);
        for(int i=0; i<N;i++)
        {
            sum+=arr[i];
            v.push_back(sum);
        }
        for(int i=0;i<v.size();i++)
        {
            last[v[i]] = i;
        }
        for(int i=v.size()-1;i>=0;i--)
        {
            first[v[i]] = i;
        }
        int ans =INT_MIN;
        for(int i=0;i<v.size();i++)
        {
            ans = max(ans , last[v[i]] - first[v[i]]);
        }
        return ans;
    }
