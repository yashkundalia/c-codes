#include <iostream>
#include <map>
#include<unordered_map>
#include <iterator>
#include <vector>
#include <string>
#include <algorithm>
#include<utility>
#include<climits>
#include<stack>
#include<set>
#include<cmath>
#include<deque>
#include<numeric>


#define ull unsigned long long
#define ll long long
#define NUM 1000000007
//ll mod  = 1000000007;
using namespace std;



ll binpow(ll x, ll y)
{
    ll res = 1ll; // Initialize result
  
    while (y > 0ll) {
        // If y is odd, multiply x with result
        if (y & 1ll)
            res = ((res%NUM) * (x%NUM))%NUM;
  
        // y must be even now
        y = y >> 1; // y = y/2
        x = ((x%NUM) * (x%NUM))%NUM; // Change x to x^2
    }
    return res%NUM;
}

bool sortbysec(pair<ll,ll> &a , pair<ll,ll> &b)
{
    if(a.first == b.first)
    {
        return (a.second <= b.second);
    }
    return (a.first < b.first) ;
}
 
int binarysearch(vector<int> v, int find,int l, int r)
{
    if(find<v[l] or find > v[r]) 
    {
        return -1;
    }
    while(l<=r)
    {
        int mid  = l + (r-l)/2 ;
        if(v[mid] == find) return mid;
        if(v[mid]  > find) r = mid -1;
        else l =mid +1;
    }
    return -1;
}

void solve()
{
    int n;
    cin>>n;
    vector<vector<bool> > check(n+1,vector<bool> (n+1));
    vector<int> l(n);
    vector<int> r(n);
    for(int i=0;i<n;i++)
    {
        int x,y;
        cin>>x>>y;
        l[i] = x;
        r[i] = y;
        check[x][y] = true;

    }
    for(int i=0;i<n;i++)
    {
        for(int j = l[i];j<=r[i];j++)
        {
            if((j==l[i] or check[l[i]][j-1]) and (j==r[i] or check[j+1][r[i]]))
            {
                cout<<l[i]<<" "<<r[i]<<" "<<j<<endl;
                break;
            }
        }
    }
    cout<<endl;
    return;


}


int main()
{
    

    int t ;
    cin>>t;
    //t=1;
    while(t--)
    {
        solve();
    }
    return 0;
    
}
