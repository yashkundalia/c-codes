#include <iostream>
#include <map>
#include<unordered_map>
#include <iterator>
#include <vector>
#include <string>
#include <algorithm>
#include<utility>
#include<climits>
#include<stack>
#include<set>
#include<cmath>
#include<numeric>


#define ull unsigned long long
#define ll long long
#define NUM 1000000007ll
//ll mod  = 1000000007;
using namespace std;

vector<vector<int>> v(1005,vector<int> (1005,0));
vector<vector<bool>> vis(1005,vector<bool>(1005,false));
int x =0;

ll binpow(ll x, ll y)
{
    ll res = 1ll; // Initialize result
  
    while (y > 0ll) {
        // If y is odd, multiply x with result
        if (y & 1ll)
            res = ((res%NUM) * (x%NUM))%NUM;
  
        // y must be even now
        y = y >> 1; // y = y/2
        x = ((x%NUM) * (x%NUM))%NUM; // Change x to x^2
    }
    return res%NUM;
}

bool sortbysec(pair<ll,ll> &a , pair<ll,ll> &b)
{
    if(a.first == b.first)
    {
        return (a.second <= b.second);
    }
    return (a.first < b.first) ;
}


void dfs(int n, int m,int i, int j,vector<vector<int> > &v ,vector<vector<bool> > &vis)
{
    if(i<0 or j<0 or i>=n or j>=m or vis[i][j]) return;
    vis[i][j] = true;
    int num = v[i][j];
    x++;
    int nr = num&8;
    int e = num&4 ;
    int s = num&2 ;
    int w = num&1;
    if(nr == 0)
    {
        //cout<<(num&(1<<3))<<"qw"<<endl;
        dfs(n,m,i-1,j, v ,vis);
    }

    if(e == 0)
    {
        dfs(n,m,i,j+1,v,vis);
    }
    if(s == 0)
    {
        dfs(n,m,i+1,j,v,vis);
    }
    if(w == 0)
    {
        dfs(n,m,i,j-1,v,vis);
    }
    //return;
}
void solve()
{
    int n ,m;
    cin>>n>>m;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            int temp;
            cin>>temp;
            v[i][j] =temp;
        }
    }
    vector<int> ans;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            //x =0;
            if(!vis[i][j]) 
            {   
                x =0;
                dfs(n,m,i,j,v,vis);
                ans.push_back(x);
            }
            
            
        }
    }
    int num =4;
    //cout<<(num&(1<<3))<<"qw"<<endl;
    //cout<<(1<<3)<<endl;
    sort(ans.rbegin(),ans.rend());
    for(auto i:ans)
    {
        cout<<i<<" ";
    }
    cout<<endl;
    return;
}



int main()
{
    
    int t ;
    //cin>>t;
    t=1;
    while(t--)
    {
        solve();
    }
    return 0;
}

/*
5 1000000000
2 1
1 10
1 1
4 1000000000
3 3


999999997*/
