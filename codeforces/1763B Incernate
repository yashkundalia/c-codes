#include <iostream>
#include <map>
#include<unordered_map>
#include <iterator>
#include <vector>
#include <string>
#include <algorithm>
#include<utility>
#include<climits>
#include<stack>

#define ull unsigned long long
#define ll long long
//#define NUM 1000000001
ull mod  = 998244353;
using namespace std;

ull binpow(ull a,ull b ,ull mod)
{
    if(b==0)return 1;
    ull res =1;
    while(b > 0)
    {
        if(b%2)
        {
            res = ((res%mod)*(a%mod))%mod;
            b--;
        }
        else
        {
            a = ((a%mod)*(a%mod))%mod;
            b /=2;
        }
    }
    return res;
}

/*ll binarysearch(ll num , vector<ll> &v )
{
    ll l =0;
    ll r = v.size() -1;
    if(v[r] < num) return r;

    while(l<=r)
    {
        ll mid  = l + (r-l)/2 ;

        if(v[mid] == num) return mid;
        if(v[mid] > num) r = mid  - 1;
        else l = mid + 1;
        //cout << l<<r <<endl;
    }
    return r;
}
*/

int binarysearch(int num , vector<int> &v )
{
    if(v.empty()) return -1;
    int l =0;
    int r = v.size() -1;
    if(v[r] <= num) return r;
    if(v[l]> num) return -1;
    while(l<r)
    {
        int mid  = l + (r-l + 1)/2 ;

        if(v[mid] == num) return mid;
        if(v[mid] > num) r = mid  - 1;
        else l = mid;
        //cout << l<<r <<endl;
    }
    return l;
}
bool success(vector<int> &v,vector<int> &temp, int k)
{
    for(int i=1;i<=k;i++)
    {
        int id = binarysearch(k-i+1 , v);
        if(id == -1) return false;
        else
        {
            v[id] = INT_MAX;
            if(v[0]!= INT_MAX) v[0] += k-i+1;
            sort(v.begin(),v.end());
            
            
        }
        /*for(int j=0;j<v.size();j++)
        {
            cout<<v[j]<<" ";
        }
        cout<<endl;*/

    }
    return true;
}





int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n,k;
        cin>>n>>k;
        vector< pair <ll,ll> > v;
        vector<ll> health;
        for(int i=0;i<n;i++)
        {
            ll h;
            cin>>h;
            //v.push_back(make_pair(p,h));
            health.push_back(h);
        }
        for(int i=0;i<n;i++)
        {
            ll h;
            cin>>h;
            v.push_back(make_pair(h,health[i]));
            //health.push_back(h);
        }
        sort(v.begin(),v.end());
        /*for(int i=0;i<v.size();i++)
        {
            cout<<v[i].second<< " ";
        }
        cout<<endl;
        for(int i=0;i<v.size();i++)
        {
            cout<<v[i].first<< " ";
        }
        cout<<endl;*/
        ll t1 = k;
        ll temp =k;
        while(k > 0 and !v.empty())
        {
            /*for(int i=0;i<v.size();i++)
            {
                v[i].second -=k;
            }*/
            
            ll count =0;
            for(int i=0;i<v.size();i++)
            {
                if(v[i].second > t1)
                {
                    k -= v[i].first;
                    break;
                }
                else count++;
            }
            t1 = t1 + k;
            /*for(int i=0;i<v.size();i++)
            {
                cout<<v[i].second<< " ";
            }
            cout<<endl;
            for(int i=0;i<v.size();i++)
            {
                cout<<v[i].first<< " ";
            }
            cout<<endl;*/
            if(count == v.size() and k > 0)
            {
                cout<<"YES"<<endl;
                break;
            }
            if(k<=0) 
            {
                cout<<"NO"<<endl;
                break;
            }
        }
    }
    
    return 0;
}
    
