#include <iostream>
#include <map>
#include<unordered_map>
#include <iterator>
#include <vector>
#include <string>
#include <algorithm>
#include<utility>
#include<climits>
#include<stack>
#include<numeric> 

#define ull unsigned long long
#define ll long long
//#define NUM 1000000001
//ull mod  = 998244353;
using namespace std;

int prime(ll num)
{
    if(num <=1) return 0;
    for(ll i=2;i*i<=num;i++)
    {
        if(num % i == 0 ) return 0;
    }
    return 1;
}
ll binarysearch(ll num, vector<ll> v)
{
    ll l =0;
    ll r = v.size() -1;
    if(v[r] < num) return -1;
    if(v[l] >= num) return 0;
    ll ans ;
    while(l<=r)
    {
        ll mid = l + (r-l)/2 ;
        if(v[mid] == num) return mid;
        if(v[mid] < num)
        {
            l = mid + 1;
        }
        else
        {
            r = mid -1;
            ans = mid;
        }
    }
    return ans;
}


ll binarysearch_l(ll num, vector<ll> v)
{
    ll l =0;
    ll r = v.size() -1;
    if(v[r] < num) return -1;
    if(v[l] >= num) return 0;
    ll ans ;
    while(l<=r)
    {
        ll mid = l + (r-l)/2 ;
        if(v[mid] == num) return mid;
        if(v[mid] < num)
        {
            l = mid + 1;
            ans = mid;
        }
        else
        {
            r = mid -1;
            //ans = mid;
        }
    }
    return ans;
}
bool myfun(pair<ll,ll> &f , pair<ll,ll> &s)
{
    return f.second >=s.first;
}
using li = long long;
int main()
{
    ll t;
    cin>>t;
    while(t--)
    {
        ll n,k;
        cin>>n>>k;
        vector<ll> v;
        for(ll i=0;i<n;i++)
        {
            ll temp;
            cin>>temp;
            v.push_back(temp);
        }
        ll m = n/k;
        ll count =0;
        vector<ll> ans(n,0);
        vector< vector<ll > > pos(n+1);
        for(ll i=0;i<n;i++)
        {
            pos[v[i]].push_back(i);
        }
        ll c =1;
        ll tot =0;
        pair<ll ,ll> last_ind ;
        vector<ll> colors(k+1,0);
        for(ll i=1;i<=n;i++)
        {
            
            if(!pos[i].empty())
            {
                ll s = pos[i].size();
                for(ll j=0;j<min(s,k);j++)
                {
                    //cout<<pos[i][j]<<" ";
                    ans[pos[i][j]] = c;
                    c = c+1;
                    if(c == k+1)
                    {
                        last_ind.first = i;
                        last_ind.second = j;
                        c =1;
                            //count++;
                    }
                   
                    
                }
            }
            
            //cout<<endl;
        }
        for(ll i = last_ind.first;i<=n;i++)
        {
            if(!pos[i].empty())
            {
                for(ll j=last_ind.second + 1;j<pos[i].size();j++)
                {
                    //cout<<i<<" "<<j<<endl;
                    ans[pos[i][j]] = 0;
                }
            }
            
        }
        for(ll i = last_ind.first + 1;i<=n;i++)
        {
            if(!pos[i].empty())
            {
                for(ll j=0;j<pos[i].size();j++)
                {
                    //cout<<i<<" "<<j<<endl;
                    ans[pos[i][j]] = 0;
                }
            }
            
        }
        for(ll i=0;i<n;i++)
        {
            cout<<ans[i]<<" ";
        }
        cout<<endl;
        //vector<ll> colors(k+1,0);


        //cout<<p[0].first<<endl;
    }
    return 0;
}
