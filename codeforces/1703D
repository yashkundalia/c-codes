#include <iostream>
#include <map>
#include<unordered_map>
#include <iterator>
#include <vector>
#include <string>
#include <algorithm>
#include<utility>
#include<climits>
#include<stack>
#include<set>
#include<cmath>
#include<deque>
#include<numeric>


#define ull unsigned long long
#define ll long long
#define NUM 1000000007
//ll mod  = 1000000007;
using namespace std;



ll binpow(ll x, ll y)
{
    ll res = 1ll; // Initialize result
  
    while (y > 0ll) {
        // If y is odd, multiply x with result
        if (y & 1ll)
            res = ((res%NUM) * (x%NUM))%NUM;
  
        // y must be even now
        y = y >> 1; // y = y/2
        x = ((x%NUM) * (x%NUM))%NUM; // Change x to x^2
    }
    return res%NUM;
}

bool sortbysec(pair<ll,ll> &a , pair<ll,ll> &b)
{
    if(a.first == b.first)
    {
        return (a.second <= b.second);
    }
    return (a.first < b.first) ;
}
 
int binarysearch(vector<int> v, int find,int l, int r)
{
    if(find<v[l] or find > v[r]) 
    {
        return -1;
    }
    while(l<=r)
    {
        int mid  = l + (r-l)/2 ;
        if(v[mid] == find) return mid;
        if(v[mid]  > find) r = mid -1;
        else l =mid +1;
    }
    return -1;
}

void solve()
{
    int n;
    cin>>n;
    map<string,int> mp;
    map<string,bool> mp1;
    vector<string> v;
    for(int i=0;i<n;i++)
    {
        string temp;
        cin>>temp;
        mp[temp]++;
        v.push_back(temp);
    }
    for(auto i:mp)
    {
        string s1 = i.first;
        mp1[s1] = false;
        if(s1.length() == 1) mp1[s1] = false;
        else
        {
            for(int i=1;i<=s1.length() - 1;i++)
            {
                string s2 = s1.substr(0, i);
                string s3 = s1.substr(i);
                if(mp.find(s2)!= mp.end() and mp.find(s3)!= mp.end())
                {
                    mp1[s1] = true;
                    break;
                }
            }
        }
    }
    string ans  ="";
    for(int i=0;i<n;i++)
    {
        if(mp1[v[i]]) ans+="1";
        else ans+="0";
    }
    cout<<ans<<endl;
    return;

}

int main()
{
    
    
    int t ;
    cin>>t;
    while(t--)
    {
        solve();
    }
    return 0;
    
}
