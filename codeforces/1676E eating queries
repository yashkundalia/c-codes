#include <iostream>
#include <map>
#include<unordered_map>
#include <iterator>
#include <vector>
#include <string>
#include <algorithm>
#include<utility>
#include<climits>
#include<stack>

#define ull unsigned long long
#define ll long long
//#define NUM 1000000001
ull mod  = 998244353;
using namespace std;

ull binpow(ull a,ull b ,ull mod)
{
    if(b==0)return 1;
    ull res =1;
    while(b > 0)
    {
        if(b%2)
        {
            res = ((res%mod)*(a%mod))%mod;
            b--;
        }
        else
        {
            a = ((a%mod)*(a%mod))%mod;
            b /=2;
        }
    }
    return res;
}

ll binarysearch(ll num , vector<ll> &v )
{
    ll l =0;
    ll r = v.size() -1;
    if(v[r] < num) return -1;

    while(l<=r)
    {
        ll mid  = l + (r-l)/2 ;

        if(v[mid] == num) return mid + 1;
        if(v[mid] > num) r = mid  - 1;
        else l = mid + 1;
        //cout << l<<r <<endl;
    }
    return l + 1;
}




int main()
{
    ll t;
    cin>>t;
    while(t--)
    {
        vector<ll> v1;
        vector<ll> v2;
    //cin>>v;
        ll n,q;
        cin>>n>>q;
        for(ll i=0;i<n;i++)
        {
            ll temp ;
            cin>>temp;
            v1.push_back(temp);
            v2.push_back(temp);

        }
        sort(v1.begin() , v1.end()) ;
        sort(v2.begin() , v2.end()) ;
        reverse(v2.begin(),v2.end());
        /*for(ll i=0;i<n;i++)
        {
            cout<<v[i]<<endl;
        }*/
        vector<ll>sum;
        ll s1 =0;
        for(ll i=0 ;i<n;i++)
        {
            s1 +=v2[i];
            sum.push_back(s1);
        }
        /*for(ll i=0;i<n;i++)
        {
            cout<<sum[i]<<endl;
        }*/
        while(q--)
        {
            ll temp;
            cin>>temp; 
            if(binarysearch(temp,v1) != -1) cout<<1<<endl;
            else
            {
                cout<<binarysearch( temp, sum)<<endl;
            }
        }
        
    }
    
    return 0;
}

//1 1000000000
