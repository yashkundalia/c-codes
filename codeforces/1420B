#include <iostream>
#include <map>
#include<unordered_map>
#include <iterator>
#include <vector>
#include <string>
#include <algorithm>
#include<utility>
#include<climits>
#include<stack>
#include<set>
#include<cmath>
#include<numeric>


#define ull unsigned long long
#define ll long long
#define NUM 1000000007
//ll mod  = 1000000007;
using namespace std;



ll binpow(ll x, ll y)
{
    ll res = 1ll; // Initialize result
  
    while (y > 0ll) {
        // If y is odd, multiply x with result
        if (y & 1ll)
            res = ((res%NUM) * (x%NUM))%NUM;
  
        // y must be even now
        y = y >> 1; // y = y/2
        x = ((x%NUM) * (x%NUM))%NUM; // Change x to x^2
    }
    return res%NUM;
}

bool sortbysec(pair<ll,ll> &a , pair<ll,ll> &b)
{
    if(a.first == b.first)
    {
        return (a.second <= b.second);
    }
    return (a.first < b.first) ;
}



void solve()
{
    ll n;
    cin>>n;
    if(n==1ll)
    {
        cout<<0<<endl;
        return;
    }
    vector<ll> v;
    for(ll i=0;i<n;i++)
    {
        ll temp;
        cin>>temp;
        v.push_back(temp);
    }
    map<ll,ll> cnt;
    vector<ll> count(n,0ll);
    for(ll i=0;i<n;i++)
    {
        for(ll j=33;j>=0;j--)
        {
            ll num =1ll<<j;
            ll check = num&v[i];
            if(check)
            {
                //count[i] = j;
                cnt[j]++;
                break;
            }
        }
    }
    
    ll ans =0ll;
    for(auto i:cnt)
    {
        ll num = i.second;
        ans+=(num*(num-1)/2);
    }
    /*cnt[count[n-1]]++;
    for(ll i=n-2;i>=0;i--)
    {
        if(cnt.find(count[i]) != cnt.end())
        {
            ans+=cnt[count[i]];
            cnt[count[i]]++;
        }
        else
        {
            cnt[count[i]]++;
        }
    }*/
    cout<<ans<<endl;
    return;
    
    
}



int main()
{
    
    /*freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);*/
    /*vector<ll> fac(200005 ,0);
    fac[0] = 1ll;
    fac[1] =1ll;
    for(ll i=2;i<200005;i++)
    {
        fac[i] = ((fac[i-1]%NUM)*(i%NUM))%NUM;
    }*/
    //cout<<fac[199999]<<endl;
    /*int t ;
    cin>>t;
    /*while(t--)
    {
        solve();
    }
    return 0;*/
    int t;
    std::cin >> t;
    while (t--) {
        int n;
        std::cin >> n;
        int cnt[30] = {};
        int64_t ans = 0;
        while (n--) {
            int x;
            std::cin >> x;
            ans += cnt[std::__lg(x)]++;
        }
        std::cout << ans << "\n";
    }
    
    return 0;
}

/*
5 1000000000
2 1
1 10
1 1
4 1000000000
3 3


999999997*/
