#include <iostream>
#include <map>
#include<unordered_map>
#include <iterator>
#include <vector>
#include <string>
#include <algorithm>
#include<utility>
#include<climits>
#include<stack>
#include<set>
#include<cmath>
#include<deque>
#include<numeric>


#define ull unsigned long long
#define ll long long
#define NUM 1000000007
//ll mod  = 1000000007;
using namespace std;



ll binpow(ll x, ll y)
{
    ll res = 1ll; // Initialize result
  
    while (y > 0ll) {
        // If y is odd, multiply x with result
        if (y & 1ll)
            res = ((res%NUM) * (x%NUM))%NUM;
  
        // y must be even now
        y = y >> 1; // y = y/2
        x = ((x%NUM) * (x%NUM))%NUM; // Change x to x^2
    }
    return res%NUM;
}

bool sortbysec(pair<ll,ll> &a , pair<ll,ll> &b)
{
    if(a.first == b.first)
    {
        return (a.second <= b.second);
    }
    return (a.first < b.first) ;
}
 
int binarysearch(vector<int> v, int find,int l, int r)
{
    if(find<v[l] or find > v[r]) 
    {
        return -1;
    }
    while(l<=r)
    {
        int mid  = l + (r-l)/2 ;
        if(v[mid] == find) return mid;
        if(v[mid]  > find) r = mid -1;
        else l =mid +1;
    }
    return -1;
}
bool isvalid(ll i , ll j ,ll n,ll m)
{
    if(i<0 or i> n-1 or j<0 or j> m-1)
    {
        return false;
    }
    return true;
}

void solve()
{
    ll n;
    cin>>n;
    vector<pair<ll,ll> >  v;
    ll ones =0;
    for(ll i=0;i<n;i++)
    {
        ll temp;
        cin>>temp;
        v.push_back({temp,i+1});
        if(temp ==1) ones++;
    }
    if(n==1)
    {
        cout<<0<<endl;
        return;
    }
    if(ones>=1 and ones<n)
    {
        cout<<-1<<endl;
        return;
    }
    sort(v.begin(),v.end());
    vector<pair<ll,ll> > ans;
    if(v[0].first == v[n-1].first)
    {
        cout<<0<<endl;
        return;
    }
    while(v[0].first != v[n-1].first)
    {
        ll val = v[0].first;
        for(ll j=0;j<n;j++) 
        {
            if(v[j].first!=val)
            {
                v[j].first = (v[j].first + val - 1)/val;
                ans.push_back({v[j].second,v[0].second});
            }
        }
        sort(v.begin(),v.end()); 
        
    }
    cout<<ans.size()<<endl;
    for(auto i:ans)
    {
        cout<<i.first<<" "<<i.second<<endl;
    }
    return;
}

int main()
{
    

    int t ;
    cin>>t;
    //t=1;
    while(t--)
    {
    
        solve();
    }
    return 0;
    
}
