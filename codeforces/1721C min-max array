#include <iostream>
#include <map>
#include<unordered_map>
#include <iterator>
#include <vector>
#include <string>
#include <algorithm>
#include<utility>
#include<climits>
#include<stack>

#define ull unsigned long long
#define ll long long
//#define NUM 1000000001
//ull mod  = 998244353;
using namespace std;

ll binarysearch(ll num, vector<ll> v)
{
    ll l =0;
    ll r = v.size() -1;
    if(num <= v[0]) return 0;
    if(num > v[r]) return -1;
    ll ans =0;
    while(l<=r)
    {
        ll mid = l +(r-l)/2;
        //if(v[mid] == num) return mid;
        if(v[mid]<num)
        {
            l = mid + 1;

        }
        else
        {
            r = mid -1;
            ans =mid;
        }
    }
    /*for(ll i= ans+1 ;i<r;i++)
    {
        if(v[i] == num) ans++;
    }*/
    return ans;
}
int main()
{
    ll t;
    cin>>t;
    while(t--)
    {
        ll n;
        cin>>n;
        vector<ll> a;
        vector<ll> b;
        for(ll i=0;i<n;i++)
        {
            ll temp;
            cin>>temp;
            a.push_back(temp);
        }
        for(ll i=0;i<n;i++)
        {
            ll temp;
            cin>>temp;
            b.push_back(temp);
        }
        /*if(n==1)
        {
            cout<<b[0] - a[0]<<endl;
            cout<<b[0] - a[0]<<endl;
            continue;

        }
        vector<ll> dmin;
        for(ll i=0;i<n;i++)
        {
            ll id = binarysearch(a[i],b);
            dmin.push_back(b[id] - a[i]);
        }
        for(ll i=0;i<n;i++)
        {
            cout<<dmin[i]<<" ";
        }
        cout<<endl;
        vector<ll> ids;
        for(ll i=0;i<n;i++)
        {
            ll id = binarysearch(a[i],b);
            ids.push_back(id);
            //cout<<id<<" ";
        }
        //cout<<endl;
        /*vector<ll> dmax;
        ll ind  = -1,start = -1;
        if(n - ids[n-1] > 1)
        {
            for(ll i=0;i<n;i++)
            {
                dmax.push_back(b[n-1] - a[i]);
            }
            
        }
        
        else
        {
            dmax.push_back(b[n-1] - a[n-1]);
            for(ll i=n-2;i>=0;i--)
            {
                //cout<<ids[i + 1] - ids[i] << "diff"<<endl;
                if(ids[i+1] -ids[i] <= 1)
                {
                    dmax.push_back(b[ids[i]] - a[i]);
                    cout<<b[ids[i]]<<" "<<a[i]<<endl;
                }
                else
                {
                    ind = ids[i+1] -1;
                    start = i;
                    break;
                }
            }
            for(ll i=start;i>=0;i--)
            {
                dmax.push_back(b[start] - a[i]);
            }
            reverse(dmax.begin(),dmax.end());

        }
        for(ll i=0;i<dmax.size();i++)
        {
            cout<<dmax[i]<<" ";
        }
        cout<<endl;*/
        for (int i = 0, j = 0; i < n; i++) {
        while (b[j] < a[i]) {
            j++;
        }
        std::cout << b[j] - a[i] << " \n"[i == n - 1];
    }
        for (int i = 0, j = 0; i < n; i++) {
        j = std::max(j, i);
        while (j + 1 < n && a[j + 1] <= b[j]) {
            j++;
        }
        std::cout << b[j] - a[i] << " \n"[i == n - 1];
    }

        
    }
    return 0;
}
